#version 330 core

in vec3 vertex;
in vec2 texCoords;
in vec3 normal;

uniform mat4 modelMat;
uniform mat4 projectionMat;
uniform mat4 viewMat;

uniform vec3 lightPosition;
uniform vec3 cameraPosition;

uniform float useFakeLighting;

out vec3 surfaceNormal;
out vec2 textureCoords;

out vec3 toLightVector;
out vec3 toCameraVector;

void main()
{
	vec4 worldPosition = modelMat * vec4(vertex, 1.0);
	gl_Position = projectionMat * viewMat * worldPosition;
	textureCoords = texCoords;
	vec3 actualNormal = normal;
	if(useFakeLighting > 0.5)
	{
		actualNormal = vec3(0.0, 1.0, 0.0);
	}
	surfaceNormal = (modelMat * vec4(actualNormal, 0.0)).xyz;
	toLightVector = lightPosition - worldPosition.xyz;
	toCameraVector = (inverse(viewMat) * vec4(0.0,0.0,0.0,1.0)).xyz - worldPosition.xyz;
}