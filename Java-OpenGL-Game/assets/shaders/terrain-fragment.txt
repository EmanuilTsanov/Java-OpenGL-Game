#version 330 core

in vec2 textureCoords;
in vec3 surfaceNormal;
in vec3 toLightVector;
in float visibility;

uniform sampler2D sampler;
uniform vec3 lightColor;
uniform vec3 skyColor;

out vec4 finalColor;

void main()
{
	vec4 textureColor = texture(sampler, textureCoords*80);
	vec3 unitNormal = normalize(surfaceNormal);
	vec3 unitToLightVector = normalize(toLightVector);
	
	float dotProduct = dot(unitNormal, unitToLightVector);
	float brightness = max(dotProduct, 0.2);
	
	vec3 diffuse = lightColor * brightness;
	
	finalColor = vec4(diffuse, 1.0) * textureColor;
	finalColor = mix(vec4(skyColor, 1.0), finalColor, visibility);
}