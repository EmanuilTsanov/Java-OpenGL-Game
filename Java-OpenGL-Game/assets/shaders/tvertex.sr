#version 330 core

in vec3 vertex;
in vec2 texCoords;

uniform mat4 modelMat;
uniform mat4 projectionMat;
uniform mat4 viewMat;

uniform float shadowDistance;

uniform mat4 toShadowMapSpace;

const float transitionDistance = 10.0f;

out vec2 textureCoords;
out vec4 shadowCoords;

void main()
{
	vec4 worldPos = modelMat * vec4(vertex, 1.0f);
	vec4 positionRelativeToCam = viewMat * worldPos;
	shadowCoords = toShadowMapSpace * worldPos;
	gl_Position = projectionMat * viewMat * worldPos;
	textureCoords = texCoords * 160f;
	
	float distance = length(positionRelativeToCam);
	distance = distance - (shadowDistance - transitionDistance);
	distance = distance / transitionDistance;
	shadowCoords.w = clamp(1.0f-distance, 0.0f, 1.0f);
}